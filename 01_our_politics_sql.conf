SecRuleEngine On

# Правило для блокировки SQL-инъекций
SecRule ARGS "union.*select.*from" \
    "id:'110001',phase:2,deny,status:403,msg:'SQL Injection Detected: ',log"

# Дополнительное правило для выявления URL-кодированных символов, типичных для SQLi
SecRule REQUEST_URI ".*(%27|%23|--|;).*" \
    "id:'110002',phase:2,deny,status:403,msg:'SQL Injection Detected: Encoded characters',log"  

# Блокировка ключевых слов
SecRule ARGS_NAMES|ARGS "(select|union|from|information_schema|users|drop|--|;)" \
    "id:'110003',phase:2,deny,status:403,msg:'SQL Injection Detected: Keywords',log" 

SecRule ARGS_NAMES|REQUEST_URI "@contains SELECT COUNT" \
    "id:'110004',phase:2,log,deny,status:403,msg:'Blocked SQL: Event'"

# Правило для блокировки SQL-инъекций
SecRule REQUEST_URI "@contains '%20or" \
    "id:'110005',phase:2,deny,status:403,msg:'SQL Injection Detected:  or',log,auditlog"

SecRule ARGS|REQUEST_BODY|REQUEST_URI "@rx (?i)(SLEEP|DELAY|ORDER BY|xp_cmdshell)" \
    "id:'110006',phase:2,log,deny,status:403,msg:'Blocked SQL Injection: Suspicious SQL function or keyword detected'"

# 1. Захват символов и добавление их в переменную TX
SecRule ARGS|REQUEST_BODY|REQUEST_URI "@rx [a-zA-Z]" \
    "id:'110007',phase:2,capture,log,setvar:tx.sql_check=%{tx.sql_check}%{TX.0},msg:'Captured letter: %{TX.0}'"

# 2. Проверка на ключевые слова в собранных данных
SecRule TX:sql_check "@rx (?i)(drop|insert|delete|update|alter|truncate)" \
    "id:'110008',phase:2,log,deny,status:403,msg:'Blocked SQL Injection: Detected SQL keyword in obfuscated input',setvar:tx.sql_check=''"

SecRule REQUEST_URI "@rx (?i)('%20or)" \
    "id:'110009',phase:2,deny,status:403,msg:'SQL Injection Detected:  or',log
